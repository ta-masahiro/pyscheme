;;; uniform vector (srfi-4)
(%python-import "u_vector")

(define s8vector-length vector-length   )
(define s8vector-ref    vector-ref      )
(define s8vector-set!   vector-set!     )
(define s8vector-copy!  vector-copy     )
(define s8vector-append vector-append   )
(define (list->s8vector ls) 
  (apply s8vector ls)) 

(define u8vector        bytevector      )
(define u8vector-length vector-length   )
(define u8vector-ref    vector-ref      )
(define u8vector-set!   vector-set!     )
(define u8vector-copy   s8vector-copy   )
(define u8vector-copy!  vector-copy     )
(define u8vector-append vector-append   )
(define u8vector->list  s8vector->list  ) 
(define (list->s8vector ls)
  (apply u8vector ls)) 

(define s16vector-length    vector-length   )
(define s16vector-ref       vector-ref      )
(define s16vector-set!      vector-set!     )
(define s16vector-copy      s8vector-copy   )
(define s16vector-copy!     vector-copy     )
(define s16vector-append    vector-append   )
(define s16vector->list     s8vector->list  ) 
(define (list->s16vector ls)
  (apply s16vector ls)) 

(define u16vector-length    vector-length   )
(define u16vector-ref       vector-ref      )
(define u16vector-set!      vector-set!     )
(define u16vector-copy      s8vector-copy   )
(define u16vector-copy!     vector-copy     )
(define u16vector-append    vector-append   )
(define u16vector->list     s8vector->list  ) 
(define (list->s16vector ls)
  (apply u16vector ls)) 
 
(define s32vector-length    vector-length   )
(define s32vector-ref       vector-ref      )
(define s32vector-set!      vector-set!     )
(define s32vector-copy      s8vector-copy   )
(define s32vector-copy!     vector-copy     )
(define s32vector-append    vector-append   )
(define s32vector->list     s8vector->list  ) 
(define (list->s32vector ls)
  (apply s32vector ls)) 

(define u32vector-length    vector-length   )
(define u32vector-ref       vector-ref      )
(define u32vector-set!      vector-set!     )
(define u32vector-copy      s8vector-copy   )
(define u32vector-copy!     vector-copy     )
(define u32vector-append    vector-append   )
(define u32vector->list     s8vector->list  ) 
(define (list->s32vector ls)
  (apply u32vector ls)) 

(define s64vector           s32vector       )
(define s64vector?          s32vector?      )
(define make-s64vector      make-s32vector  )
(define s64vector-length    vector-length   )
(define s64vector-ref       vector-ref      )
(define s64vector-set!      vector-set!     )
(define s64vector-copy      s8vector-copy   )
(define s64vector-copy!     vector-copy     )
(define s642vector-append   vector-append   )
(define s64vector->list     s8vector->list  ) 
(define (list->s64vector ls)
  (apply s64vector ls)) 

(define u64vector           u32vector       )
(define u64vector?          u32vector?      )
(define make-u64vector      make-u32vector  )
(define u64vector-length    vector-length   )
(define u64vector-ref       vector-ref      )
(define u64vector-set!      vector-set!     )
(define u64vector-copy      s8vector-copy   )
(define u64vector-copy!     vector-copy     )
(define u64vector-append    vector-append   )
(define u64vector->list     s8vector->list  ) 
(define (list->s64vector ls)
  (apply u64vector ls))


(define f32vector-length    vector-length   )
(define f32vector-ref       vector-ref      )
(define f32vector-set!      vector-set!     )
(define f32vector-copy      s8vector-copy   )
(define f32vector-copy!     vector-copy     )
(define f32vector-append    vector-append   )
(define f32vector->list     s8vector->list  ) 
(define (list->f32vector ls)
  (apply f32vector ls)) 

(define f64vector-length    vector-length   )
(define f64vector-ref       vector-ref      )
(define f64vector-set!      vector-set!     )
(define f64vector-copy      s8vector-copy   )
(define f64vector-copy!     vector-copy     )
(define f64vector-append    vector-append   )
(define f64vector->list     s8vector->list  ) 
(define (list->f64vector ls)
  (apply f64vector ls)) 
